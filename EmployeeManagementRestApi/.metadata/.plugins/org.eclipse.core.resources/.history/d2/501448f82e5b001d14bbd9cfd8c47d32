package com.employeemanagement.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Sort.Direction;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.employeemanagement.model.Employee;
import com.employeemanagement.service.EmployeeService;

@RestController
@RequestMapping("/api/employee")
public class EmployeeRestController {
	
	
@Autowired
	EmployeeService employeeService;
 

@GetMapping
public List<Employee> findAll(){
	return employeeService.findAll();
}

@GetMapping("/{id}")
public Employee findById(@PathVariable("id") long employeeId) {
	return employeeService.findById(employeeId);
}
@PostMapping
public Employee saveEmployee(@RequestBody Employee employee) {
	return employeeService.saveEmployee(employee);
}

@PutMapping("/{id}")
public Employee updateEmployee(@PathVariable("id") long employeeId, @RequestBody Employee employee) {
	return employeeService.updateEmployee(employeeId, employee);
}

@DeleteMapping
public void deleteAll() {
	employeeService.deleteAll();
}

@DeleteMapping("/{id}")
public void deleteByID(@PathVariable("id") long employeeId) {
	employeeService.deletebyId(employeeId);
}

@GetMapping("/firstName")
public List<Employee> findByFirstName(@RequestParam(name="firstName") String firstName ){
       return employeeService.findByFirstName(firstName);
}

@GetMapping("/sort")
public List<Employee> getEmployeeSortedByFirstName(@RequestParam(name="direction") Direction direction){
	return employeeService.getEmployeeSortedByFirstName(direction);
} 
}
